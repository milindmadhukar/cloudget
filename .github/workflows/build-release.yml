name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.22'
  BINARY_NAME: 'cloud-downloader'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Run staticcheck
      uses: dominikh/staticcheck-action@v1.3.0
      with:
        version: "2023.1.6"

  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    strategy:
      matrix:
        include:
          # Windows builds
          - goos: windows
            goarch: amd64
            suffix: '.exe'
          - goos: windows
            goarch: arm64
            suffix: '.exe'
          
          # Linux builds
          - goos: linux
            goarch: amd64
            suffix: ''
          - goos: linux
            goarch: arm64
            suffix: ''
          - goos: linux
            goarch: arm
            suffix: ''
          - goos: linux
            goarch: 386
            suffix: ''
          
          # macOS builds
          - goos: darwin
            goarch: amd64
            suffix: ''
          - goos: darwin
            goarch: arm64
            suffix: ''
          
          # FreeBSD builds
          - goos: freebsd
            goarch: amd64
            suffix: ''
          - goos: freebsd
            goarch: arm64
            suffix: ''

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        mkdir -p dist
        BINARY_NAME_WITH_OS="${{ env.BINARY_NAME }}-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}"
        go build -a -installsuffix cgo -ldflags="-w -s" -o "dist/${BINARY_NAME_WITH_OS}" ./cmd/downloader
        
        # Create archive
        cd dist
        if [ "${{ matrix.goos }}" = "windows" ]; then
          zip "${BINARY_NAME_WITH_OS%.exe}.zip" "${BINARY_NAME_WITH_OS}"
        else
          tar -czf "${BINARY_NAME_WITH_OS}.tar.gz" "${BINARY_NAME_WITH_OS}"
        fi
        cd ..

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/
        retention-days: 30

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Log in to GitHub Container Registry
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKER_USERNAME }}/cloud-downloader
          ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Prepare release assets
      run: |
        mkdir -p release-assets
        find artifacts -name "*.zip" -o -name "*.tar.gz" | xargs -I {} cp {} release-assets/
        
        # Create checksums
        cd release-assets
        sha256sum * > checksums.txt
        cd ..

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -n "$PREV_TAG" ]; then
          echo "## Changes since $PREV_TAG" > CHANGELOG.md
          git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> CHANGELOG.md
        else
          echo "## Initial Release" > CHANGELOG.md
          echo "First release of Cloud Downloader CLI" >> CHANGELOG.md
        fi
        
        echo "## Download" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Binaries" >> CHANGELOG.md
        echo "Download the appropriate binary for your platform:" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "| Platform | Architecture | Download |" >> CHANGELOG.md
        echo "|----------|--------------|----------|" >> CHANGELOG.md
        echo "| Windows | x86_64 | \`cloud-downloader-windows-amd64.zip\` |" >> CHANGELOG.md
        echo "| Windows | ARM64 | \`cloud-downloader-windows-arm64.zip\` |" >> CHANGELOG.md
        echo "| Linux | x86_64 | \`cloud-downloader-linux-amd64.tar.gz\` |" >> CHANGELOG.md
        echo "| Linux | ARM64 | \`cloud-downloader-linux-arm64.tar.gz\` |" >> CHANGELOG.md
        echo "| Linux | ARM | \`cloud-downloader-linux-arm.tar.gz\` |" >> CHANGELOG.md
        echo "| Linux | i386 | \`cloud-downloader-linux-386.tar.gz\` |" >> CHANGELOG.md
        echo "| macOS | Intel | \`cloud-downloader-darwin-amd64.tar.gz\` |" >> CHANGELOG.md
        echo "| macOS | Apple Silicon | \`cloud-downloader-darwin-arm64.tar.gz\` |" >> CHANGELOG.md
        echo "| FreeBSD | x86_64 | \`cloud-downloader-freebsd-amd64.tar.gz\` |" >> CHANGELOG.md
        echo "| FreeBSD | ARM64 | \`cloud-downloader-freebsd-arm64.tar.gz\` |" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Docker" >> CHANGELOG.md
        echo "\`\`\`bash" >> CHANGELOG.md
        echo "docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}" >> CHANGELOG.md
        echo "\`\`\`" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Installation" >> CHANGELOG.md
        echo "1. Download the appropriate binary for your platform" >> CHANGELOG.md
        echo "2. Extract the archive" >> CHANGELOG.md
        echo "3. Make the binary executable (Linux/macOS): \`chmod +x cloud-downloader-*\`" >> CHANGELOG.md
        echo "4. Move to a directory in your PATH (optional)" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Usage" >> CHANGELOG.md
        echo "\`\`\`bash" >> CHANGELOG.md
        echo "./cloud-downloader-linux-amd64 -url \"https://dropbox.com/s/abc/file.zip\"" >> CHANGELOG.md
        echo "\`\`\`" >> CHANGELOG.md

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "release-assets/*"
        bodyFile: "CHANGELOG.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

